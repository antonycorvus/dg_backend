/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DGCCrowdSale,
  DGCCrowdSaleInterface,
} from "../../../contracts/DGCCrowndsale.sol/DGCCrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020aa380380620020aa8339818101604052810190620000379190620002bb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200032d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001d781620001c2565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b60006200026f82620001fd565b9050919050565b6000620002838262000262565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b60008060008060808587031215620002d857620002d7620001bd565b5b6000620002e887828801620001e6565b9450506020620002fb87828801620001e6565b93505060406200030e878288016200024b565b92505060606200032187828801620002a4565b91505092959194509250565b611d6d806200033d6000396000f3fe6080604052600436106100fe5760003560e01c8063610757e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063610757e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063592a00e4146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b60405161012591906114d9565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190611525565b6103a1565b60405161016291906114d9565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d9190611525565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190611525565b610475565b005b6101c5610532565b005b3480156101d357600080fd5b506101dc6107a1565b005b3480156101ea57600080fd5b506101f3610866565b005b34801561020157600080fd5b5061020a610a3e565b60405161021791906114d9565b60405180910390f35b34801561022c57600080fd5b50610235610a44565b6040516102429190611593565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d91906115fe565b610a6a565b005b34801561028057600080fd5b50610289610b61565b005b34801561029757600080fd5b506102a0610be9565b6040516102ad919061163a565b60405180910390f35b3480156102c257600080fd5b506102cb610c12565b6040516102d891906116b4565b60405180910390f35b3480156102ed57600080fd5b5061030860048036038101906103039190611525565b610c38565b60405161031591906114d9565b60405180910390f35b34801561032a57600080fd5b5061034560048036038101906103409190611525565b610c4f565b005b34801561035357600080fd5b5061036e600480360381019061036991906116fb565b610f4a565b005b34801561037c57600080fd5b50610385611042565b60405161039291906116b4565b60405180910390f35b60025481565b6000600354826103b19190611757565b9050919050565b6103c0611068565b73ffffffffffffffffffffffffffffffffffffffff166103de610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b9061180e565b60405180910390fd5b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b8160405161046a91906114d9565b60405180910390a150565b61047d611068565b73ffffffffffffffffffffffffffffffffffffffff1661049b610be9565b73ffffffffffffffffffffffffffffffffffffffff16146104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e89061180e565b60405180910390fd5b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161052791906114d9565b60405180910390a150565b6000349050600061054282610c38565b905060008111610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e9061187a565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105e3919061163a565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063391906118af565b1015610674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066b90611928565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156106ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c590611928565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610736573d6000803e3d6000fd5b50610764600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611070565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea503382604051610795929190611948565b60405180910390a15050565b6107a9611068565b73ffffffffffffffffffffffffffffffffffffffff166107c7610be9565b73ffffffffffffffffffffffffffffffffffffffff161461081d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108149061180e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610863573d6000803e3d6000fd5b50565b61086e611068565b73ffffffffffffffffffffffffffffffffffffffff1661088c610be9565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d99061180e565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161097c919061163a565b60206040518083038186803b15801561099457600080fd5b505afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc91906118af565b6040518363ffffffff1660e01b81526004016109e9929190611948565b602060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b91906119a9565b50565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a72611068565b73ffffffffffffffffffffffffffffffffffffffff16610a90610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610ae6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610add9061180e565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f0715181604051610b5691906116b4565b60405180910390a150565b610b69611068565b73ffffffffffffffffffffffffffffffffffffffff16610b87610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610bdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd49061180e565b60405180910390fd5b610be760006110f6565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060025482610c489190611757565b9050919050565b6000610c5a826103a1565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cb7919061163a565b60206040518083038186803b158015610ccf57600080fd5b505afa158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0791906118af565b3373ffffffffffffffffffffffffffffffffffffffff16311015610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611928565b60405180910390fd5b60008111610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a9061187a565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dff919061163a565b60206040518083038186803b158015610e1757600080fd5b505afa158015610e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4f91906118af565b1015610e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8790611928565b60405180910390fd5b610ee0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111ba565b610f0d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611070565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610f3e929190611948565b60405180910390a15050565b610f52611068565b73ffffffffffffffffffffffffffffffffffffffff16610f70610be9565b73ffffffffffffffffffffffffffffffffffffffff1614610fc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd9061180e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102d90611a48565b60405180910390fd5b61103f816110f6565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6110f18363a9059cbb60e01b848460405160240161108f929190611948565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611243565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61123d846323b872dd60e01b8585856040516024016111db93929190611a68565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611243565b50505050565b60006112a5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661130a9092919063ffffffff16565b905060008151111561130557808060200190518101906112c591906119a9565b611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb90611b11565b60405180910390fd5b5b505050565b60606113198484600085611322565b90509392505050565b606082471015611367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135e90611ba3565b60405180910390fd5b61137085611436565b6113af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a690611c0f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516113d89190611ca9565b60006040518083038185875af1925050503d8060008114611415576040519150601f19603f3d011682016040523d82523d6000602084013e61141a565b606091505b509150915061142a828286611459565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611469578290506114b9565b60008351111561147c5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b09190611d15565b60405180910390fd5b9392505050565b6000819050919050565b6114d3816114c0565b82525050565b60006020820190506114ee60008301846114ca565b92915050565b600080fd5b611502816114c0565b811461150d57600080fd5b50565b60008135905061151f816114f9565b92915050565b60006020828403121561153b5761153a6114f4565b5b600061154984828501611510565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061157d82611552565b9050919050565b61158d81611572565b82525050565b60006020820190506115a86000830184611584565b92915050565b60006115b982611552565b9050919050565b60006115cb826115ae565b9050919050565b6115db816115c0565b81146115e657600080fd5b50565b6000813590506115f8816115d2565b92915050565b600060208284031215611614576116136114f4565b5b6000611622848285016115e9565b91505092915050565b611634816115ae565b82525050565b600060208201905061164f600083018461162b565b92915050565b6000819050919050565b600061167a61167561167084611552565b611655565b611552565b9050919050565b600061168c8261165f565b9050919050565b600061169e82611681565b9050919050565b6116ae81611693565b82525050565b60006020820190506116c960008301846116a5565b92915050565b6116d8816115ae565b81146116e357600080fd5b50565b6000813590506116f5816116cf565b92915050565b600060208284031215611711576117106114f4565b5b600061171f848285016116e6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611762826114c0565b915061176d836114c0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117a6576117a5611728565b5b828202905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117f86020836117b1565b9150611803826117c2565b602082019050919050565b60006020820190508181036000830152611827816117eb565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000611864600e836117b1565b915061186f8261182e565b602082019050919050565b6000602082019050818103600083015261189381611857565b9050919050565b6000815190506118a9816114f9565b92915050565b6000602082840312156118c5576118c46114f4565b5b60006118d38482850161189a565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611912601c836117b1565b915061191d826118dc565b602082019050919050565b6000602082019050818103600083015261194181611905565b9050919050565b600060408201905061195d600083018561162b565b61196a60208301846114ca565b9392505050565b60008115159050919050565b61198681611971565b811461199157600080fd5b50565b6000815190506119a38161197d565b92915050565b6000602082840312156119bf576119be6114f4565b5b60006119cd84828501611994565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a326026836117b1565b9150611a3d826119d6565b604082019050919050565b60006020820190508181036000830152611a6181611a25565b9050919050565b6000606082019050611a7d600083018661162b565b611a8a602083018561162b565b611a9760408301846114ca565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611afb602a836117b1565b9150611b0682611a9f565b604082019050919050565b60006020820190508181036000830152611b2a81611aee565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b8d6026836117b1565b9150611b9882611b31565b604082019050919050565b60006020820190508181036000830152611bbc81611b80565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611bf9601d836117b1565b9150611c0482611bc3565b602082019050919050565b60006020820190508181036000830152611c2881611bec565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611c63578082015181840152602081019050611c48565b83811115611c72576000848401525b50505050565b6000611c8382611c2f565b611c8d8185611c3a565b9350611c9d818560208601611c45565b80840191505092915050565b6000611cb58284611c78565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611ce782611cc0565b611cf181856117b1565b9350611d01818560208601611c45565b611d0a81611ccb565b840191505092915050565b60006020820190508181036000830152611d2f8184611cdc565b90509291505056fea26469706673582212207c5086e86d36807a0496fb6276d42e476ba4a9ea2a05b2acd4aac16f3c4dddc264736f6c63430008090033";

type DGCCrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DGCCrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DGCCrowdSale__factory extends ContractFactory {
  constructor(...args: DGCCrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DGCCrowdSale> {
    return super.deploy(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<DGCCrowdSale>;
  }
  override getDeployTransaction(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override attach(address: string): DGCCrowdSale {
    return super.attach(address) as DGCCrowdSale;
  }
  override connect(signer: Signer): DGCCrowdSale__factory {
    return super.connect(signer) as DGCCrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DGCCrowdSaleInterface {
    return new utils.Interface(_abi) as DGCCrowdSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DGCCrowdSale {
    return new Contract(address, _abi, signerOrProvider) as DGCCrowdSale;
  }
}
